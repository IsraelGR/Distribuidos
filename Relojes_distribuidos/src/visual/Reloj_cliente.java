/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.sql.Time;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author Sadok
 */
public class Reloj_cliente extends javax.swing.JFrame {
    public Reloj_cliente() {
        initComponents();
        h2.start();
        
    }

    class RelojDos implements Runnable{
    
        public void iniciaCliente() throws IOException, ClassNotFoundException {
            Socket socket = new Socket("127.0.0.1", Reloj_servidor.RelojUno.puerto);

            Date fecha;
            String horaInicial;

            ObjectInputStream oi = new ObjectInputStream(socket.getInputStream());
            //Establece hora
            fecha = (Time) oi.readObject();
            horaInicial = fecha.getHours()+":"+fecha.getMinutes()+":"+fecha.getSeconds();
            //Envia hora para actualizar
            ObjectOutputStream obs = new ObjectOutputStream(socket.getOutputStream());
            Time time = Time.valueOf("00:05:29");
    //        
    //        
    //        //Envia y recibe hora
            while(true){
                obs.writeObject(time);
                time = (Time) oi.readObject();
                
                if(time.equals(Time.valueOf("00:00:00"))){
                    try {
                        Thread.sleep(5000);
                        obs.writeObject(Time.valueOf(h.getText()+":"+m.getText()+":"+s.getText()));
                        time = (Time) oi.readObject();
                        
                    } catch (InterruptedException e) {

                    }
                }
                
                h.setText(String.format("%02d", time.getHours()));
                m.setText(String.format("%02d", time.getMinutes()));
                s.setText(String.format("%02d", time.getSeconds()));
                
//                System.err.println(time.getHours()+":"+time.getMinutes()+":"+time.getSeconds());
            }

            //br.close();
            //socket.close();
        }

        @Override
        public void run(){
            try {
                iniciaCliente();
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(RelojDos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    RelojDos hilo2 = new RelojDos();
    Thread h2 = new Thread(hilo2, "Hilo_Secuencia2");
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        h = new javax.swing.JTextField();
        m = new javax.swing.JTextField();
        s = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(h, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reloj_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reloj_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reloj_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reloj_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reloj_cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField h;
    private javax.swing.JTextField m;
    private javax.swing.JTextField s;
    // End of variables declaration//GEN-END:variables
}
