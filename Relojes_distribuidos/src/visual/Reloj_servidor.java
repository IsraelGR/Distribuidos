/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Time;
import java.text.ParseException;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Sadok
 */
public class Reloj_servidor extends javax.swing.JFrame {

    /**
     * Creates new form Reloj
     */
    public Reloj_servidor() {
        initComponents();
        h1.start();
        
    }
    
    
    class RelojUno implements Runnable{
        public static final int puerto = 5000;
        private boolean interruption = false;

        public Time setReloj(){
            return Time.valueOf(LocalTime.of(LocalDateTime.now().getHour(), LocalDateTime.now().getMinute(),LocalDateTime.now().getSecond()));
        }

        public Time iniciaReloj(int h, int m, int s) throws ParseException{
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                return Time.valueOf("00:00:00");
            }

            if(s < 59){
                s++;
            }else if(m < 59){
                s = 0;
                m += 1;
            }else if(h < 23){
                m = 0;
                s = 0;
                h += 1;
            }else{
                m = 0;
                s = 0;
                h = 0;
            }

            Time time = Time.valueOf(h+":"+m+":"+s);
            return time;
        }

        public void iniciaServer()throws IOException, InterruptedException, ParseException, ClassNotFoundException{
            ServerSocket socketServidor = new ServerSocket(puerto);
            Time hora;

                while(true){
                    Socket socketCliente = socketServidor.accept();
                    ObjectOutputStream obs = new ObjectOutputStream(socketCliente.getOutputStream());
                    obs.writeObject(setReloj());
                    obs.flush();
                    ObjectInputStream oi = new ObjectInputStream(socketCliente.getInputStream());


                    while(true){//Se quito el sleep ya que ya se tiene uno arriba y el tiempo de proceso cubre el segundo
                        if(Thread.interrupted()){
                                hora = (Time) oi.readObject();
                                obs.writeObject(Time.valueOf("00:00:00"));
                        }
                        hora = (Time) oi.readObject();
                        System.err.println(hora.getHours()+":"+hora.getMinutes()+":"+hora.getSeconds());
                        obs.writeObject(iniciaReloj(hora.getHours(),hora.getMinutes(),hora.getSeconds()));
                        obs.flush();
                    }

                    //obs.close();
                    //socketCliente.close();
                }
        }

        @Override
        public void run(){
            try {
                iniciaServer();
            } catch (IOException | InterruptedException | ParseException | ClassNotFoundException ex) {
                Logger.getLogger(relojes_distribuidos.RelojUno.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public RelojUno hilo1 = new RelojUno();
    public Thread h1 = new Thread(hilo1, "Hilo_Secuencia1");
    
    public void iniciaAlgo(){
        h1.interrupt();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        interrupcion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        interrupcion.setText("Cambiar");
        interrupcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interrupcionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(interrupcion)
                .addContainerGap(217, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(interrupcion)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void interrupcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interrupcionActionPerformed
        h1.interrupt();
    }//GEN-LAST:event_interrupcionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reloj_servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reloj_servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reloj_servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reloj_servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reloj_servidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton interrupcion;
    // End of variables declaration//GEN-END:variables
}
